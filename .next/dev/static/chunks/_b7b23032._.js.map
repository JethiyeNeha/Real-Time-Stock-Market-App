{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nehajethiye/Desktop/neha-git-personal/Real-Time-Stock-Market-App/lib/constants.ts"],"sourcesContent":["export const NAV_ITEMS =[\n    { href: \"/\", label: \"Dashboard\" },\n    { href: \"/search\", label: \"Search\" },\n    { href: \"/watchlist\", label: \"Watchlist\" },\n]"],"names":[],"mappings":";;;;AAAO,MAAM,YAAW;IACpB;QAAE,MAAM;QAAK,OAAO;IAAY;IAChC;QAAE,MAAM;QAAW,OAAO;IAAS;IACnC;QAAE,MAAM;QAAc,OAAO;IAAY;CAC5C","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/nehajethiye/Desktop/neha-git-personal/Real-Time-Stock-Market-App/components/NavItems.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react'\nimport Link from \"next/link\";\nimport {usePathname} from \"next/navigation\";\nimport {NAV_ITEMS} from \"@/lib/constants\";\n\n\nconst NavItems = () => {\n    const pathName = usePathname()\n    const isActive = (path: string) => {\n        if (path === '/') return pathName === '/';\n        return pathName.startsWith(path);\n    }\n    return (\n        <ul className=\"flex flex-col sm:flex-row p-2 gap-3 sm:gap-10 font-medium\">\n            {NAV_ITEMS.map(({href, label}) => (\n                <li key={href}>\n                    <Link href={href}\n                          className={`hover:text-yellow-500 transition-colors ${isActive(href) ? 'text-gray-100' : ''}`}>{label}</Link>\n                </li>\n            ))}\n\n        </ul>\n    )\n}\nexport default NavItems\n"],"names":["c","_c","React","Link","usePathname","NAV_ITEMS","NavItems","$","$i","Symbol","for","pathName","t0","path","startsWith","isActive","t1","map","t2","href","label"],"mappings":";;;;;AAAY,SAAAA,CAAA,IAAAC,EAAA;AAGZ,OAAOE,IAAI,MAAM,WAAW;AAC5B,SAAQC,WAAW,QAAO,iBAAiB;AAC3C,SAAQC,SAAS,QAAO,iBAAiB;;;AALzC,YAAY;;;;;AAQZ,iBAAiBC,CAAA;;IAAA,MAAAC,CAAA,OAAAN,gLAAA,EAAA;IAAA,IAAAM,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IACb,MAAAI,QAAA;IAA8B,IAAAC,EAAA;IAAA,IAAAL,CAAA,CAAA,EAAA,KAAAI,QAAA,EAAA;QACbC,EAAA,GAAAC,IAAA;YACb,IAAIA,IAAI,KAAK,GAAG,EAAA;gBAAA,OAASF,QAAQ,KAAK,GAAG;YAAA;YAAC,OACnCA,QAAQ,CAAAG,UAAW,CAACD,IAAI,CAAC;QAAA,CACnC;QAAAN,CAAA,CAAA,EAAA,GAAAI,QAAA;QAAAJ,CAAA,CAAA,EAAA,GAAAK,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAL,CAAA,CAAA,EAAA;IAAA;IAHD,MAAAQ,QAAA,GAAiBH,EAGhB;IAAA,IAAAI,EAAA;IAAA,IAAAT,CAAA,CAAA,EAAA,KAAAQ,QAAA,EAAA;QAGQC,EAAA,GAAAX,gIAAS,CAAAY,GAAI,CAACC,EAAA;YAAC,MAAA,EAAAC,IAAA,EAAAC,KAAAA,EAAA,GAAAF,EAAa;YAAA,qBACzB,6LAAA,EAGK,CAHIC,GAAI,CAAJA;wCACL,6LAAC,0KAAI;oBAAOA,IAAI,CAAJA,CAAAA,IAAG,CAAC;oBACC,SAAkF,CAAlF,CAAA,CAAA,wCAAA,EAA2CJ,QAAQ,CAACI,IAA2B,CAAC,GAArC,eAAqC,GAArC,EAAqC,EAAC,CAAC,CAAGC;8BAAAA,KAAI,CAAE,EAD3G,IAAI,CAET,EAHA,EAGK;;;;;;eAHID,IAAG,CAAC;;;;;QAGR,CACR,CAAC;QAAAZ,CAAA,CAAA,EAAA,GAAAQ,QAAA;QAAAR,CAAA,CAAA,EAAA,GAAAS,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAT,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAW,EAAA;IAAA,IAAAX,CAAA,CAAA,EAAA,KAAAS,EAAA,EAAA;QANNE,EAAA,iBAAA,6LAAA,EAQK;YARS,SAA2D,EAA3D,2DAA2D,CACpE;sBAAAF,EAKA,CAEL,EARA,EAQK;;;;;;QAAAT,CAAA,CAAA,EAAA,GAAAS,EAAA;QAAAT,CAAA,CAAA,EAAA,GAAAW,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAX,CAAA,CAAA,EAAA;IAAA;IAAA,OARLW,EAQK;AAAA,CAEZ;;;QAhBoBd,oJAAW,CAAC,CAAC;;;KAD5BE,QAAQ;uCAkBCA,QAAQ","ignoreList":[],"debugId":null}}]
}